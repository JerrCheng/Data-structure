struct ListNode* removeElements(struct ListNode* head, int val){
  struct  ListNode*cur = head;
    struct ListNode*prev = NULL;
    while(cur != NULL)
    {
        if(cur->val == val)
        {
            if(cur == head)
            {
                head = cur->next;
                free(cur);
                cur = head;
            }
            else
            {
                prev->next = cur->next;
                free(cur);
                cur = prev->next;
            }
           
        }
        else
        {
            prev = cur;
            cur = cur->next;
           
        }

        
    }
    return head;
}





法二   移动到新链表
struct ListNode* removeElements(struct ListNode* head, int val){
    struct ListNode*tail = NULL;
    struct ListNode*cur = head;

    //哨兵位的头结点
    head = tail = (struct ListNode*)malloc(sizeof(struct ListNode));
    tail->next = NULL;

    while(cur)
    {
        if(cur->val == val)
        {
            //删除val
            struct ListNode*del = cur;
            cur = cur->next;
            free(del);
        }
         else
                {
                    tail->next = cur;
                    tail = tail->next;
                     cur = cur->next;
                }

            
    }
 
    tail->next = NULL;
    struct ListNode*del = head;
    head = head->next;
    free(del);

    return head;
}