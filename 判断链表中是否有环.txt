/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        //判空
        if(head == NULL)
        return false;

        //快慢指针
        ListNode* fast = head;
        ListNode* slow = head;

        //如果有环，快慢指针一定会相遇
        while(fast != NULL && fast->next != NULL)
        {
            //快指针走两步，慢指针走一步
            fast = fast->next->next;
            slow = slow->next;

            if(fast == slow)
            return true;
        }

        return false;
    }
};