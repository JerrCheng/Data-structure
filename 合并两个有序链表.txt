法一：不带哨兵位

struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2){
    //判断是否为空链表
    if(list1 == NULL)
    return list2;
   if(list2 == NULL)
    return list1;
    struct ListNode*head,*tail;
    head = tail = NULL;
    while(list1 && list2)
    {
        if(list1->val < list2->val )
        {
            if(tail ==NULL)
            {
                head = tail = list1;
            }
            else
            {
                tail->next = list1;
                tail = tail->next;
            }
            list1 = list1->next;
        }
        else
        {
          if(tail ==NULL)
            {
                head = tail = list2;
            }
            else
            {
                tail->next = list2;
                tail = tail->next;
            }
            list2 = list2->next;
        }
    }
    if(list1)
    tail->next = list1;
    if(list2)
    tail->next = list2;
    return head;
}

法二：带哨兵位
struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2){
    struct ListNode*head,*tail;
    head = tail = (struct ListNode*) malloc (sizeof(struct ListNode));
    tail->next = NULL;
    while(list1 && list2)
    {
        if(list1->val < list2->val)
        {
            tail->next = list1;
            tail = tail->next;

            list1 = list1->next;
        }
        else
        {
            tail->next = list2;
            tail = tail->next;

            list2 = list2->next; 
        }
    }
    if(list1)
    tail->next = list1;
    if(list2)
    tail->next = list2;
    struct ListNode* list = head->next;
    free(head);
    return list;

}