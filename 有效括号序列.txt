辅助栈，主要思路就是：
遇到左符号时，将左符号加入到栈中
遇到右符号时，看此时的右符号是否与栈顶元素组成对                         应的符号，不能则不是有效的序列
 这里注意，栈如果为空也不是有效序列
最终遍历结束后，如果栈非空，则不是有效序列
class Solution {
  public:
    /**
     *
     * @param s string字符串
     * @return bool布尔型
     */
    bool isValid(string s) {
    stack<char> nums;
 
        for(int i=0;i<s.size();i++){
            if(s[i]=='[' || s[i]=='(' || s[i]=='{'){
                nums.push(s[i]);
            }
            else{
                if(nums.empty()){
                    return false;
                }
                if(s[i]==']' && nums.top()=='[' ||  s[i]==')'&& nums.top()=='(' || s[i]=='}'&& nums.top()=='{'){
                    nums.pop();
                }
            }
        }
        return nums.empty();
    }
};